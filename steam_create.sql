create schema if not exists steam;

set search_path to steam;

CREATE TABLE user_account
(
    uid          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username     VARCHAR(32) NOT NULL,
    date_created DATE        NOT NULL,
    games_owned  INTEGER DEFAULT 0, -- due to users not acutally needing to have any games
    -- owned to have an account on steam
    FOREIGN KEY (games_owned) REFERENCES library (games_owned)
);

CREATE TABLE library
(
    uid         INTEGER NOT NULL,
    lib              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    games            TEXT,
    games_owned INTEGER,
    FOREIGN KEY (uid) REFERENCES user_account (uid)
);

CREATE TABLE game -- add plenty of games there, I got names ready for all of that
(
    gid            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name           TEXT,
    user_played    INTEGER,
    friends_played INTEGER -- I don't know what name to give to this one
);

CREATE TABLE genres
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre    TEXT,
    game_id  INTEGER
);

CREATE TABLE friends
(
    fid           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username      TEXT NOT NULL,
    friends_with  INTEGER, -- this is for the user_id to be called (with a join)
    friends_since INTEGER NOT NULL
);

CREATE TABLE store
(
    uid      INTEGER,
    friend_id    INTEGER,
    gid      INTEGER NOT NULL,
    name_of_game TEXT NOT NULL,
    genre_id     INTEGER NOT NULL,
    reviews      TEXT NOT NULL,
    developer    TEXT NOT NULL,
    publisher    TEXT NOT NULL,
    price        INTEGER NOT NULL,
    PRIMARY KEY (gid, uid),
    FOREIGN KEY (uid) REFERENCES user_account (uid),
    FOREIGN KEY (gid) REFERENCES game (gid)
);

CREATE TABLE profile
(
    uid INTEGER NOT NULL,
    name TEXT NOT NULL,
    friends INTEGER DEFAULT 0,
    recent_activity TEXT,
    games_owned INTEGER,
    PRIMARY KEY (uid,games_owned),
    FOREIGN KEY (uid) REFERENCES user_account (uid),
    FOREIGN KEY (games_owned) REFERENCES user_account (games_owned)
)